{"version":3,"sources":["pages/Login.jsx","pages/Register.jsx","pages/Welcome.jsx","pages/NotAuthenticated.jsx","App.jsx","index.jsx"],"names":["Login","_ref","setAuthenticated","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","email","password","_useState4","user","setUser","toastOptions","position","autoClose","pauseOnHover","draggable","theme","handleJoinValidation","toast","error","loginUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_yield$axios$post","data","wrap","_context","prev","next","preventDefault","axios","post","sent","status","msg","localStorage","setItem","acessToken","t0","stop","_x","apply","arguments","_jsxs","_Fragment","children","Paper","elevation","style","padding","height","width","margin","_jsx","Grid","align","Avatar","backgroundColor","LockIcon","Container","component","maxWidth","Box","sx","marginTop","display","alignItems","flexDirection","Typography","variant","color","mt","onSubmit","container","spacing","item","xs","TextField","required","fullWidth","name","id","label","type","value","onChange","_objectSpread","target","autoComplete","InputProps","endAdornment","IconButton","onClick","Visibility","VisibilityOff","Button","mb","justifyContent","NavLink","to","ToastContainer","Register","showConfirmPassword","setShowConfirmPassword","_useState5","confirmPassword","_useState6","handleInputs","_defineProperty","emailPattern","passwordPattern","handleRegisterValidation","match","registerUser","success","onClose","containerStyle","minHeight","WelcomeMessage","textAlign","gutterBottom","removeItem","NotAuthenticated","App","getItem","authenticated","Router","Routes","Route","path","element","Welcome","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.398d7cfc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Container,\r\n  Button,\r\n  IconButton,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport { Paper, Avatar } from \"@material-ui/core\";\r\n\r\nfunction Login({ setAuthenticated }) {\r\n  const paperStyle = {\r\n    padding: 20,\r\n    height: \"70vh\",\r\n    width: 350,\r\n    margin: \"75px auto\",\r\n  };\r\n\r\n  const avatarStyle = { backgroundColor: \"#2F2FA2\" };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  // Function to toggle password visibility\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  const handleJoinValidation = () => {\r\n    const { email, password } = user;\r\n    if (!email || !password) {\r\n      toast.error(\"Both Email and Password are required\", toastOptions);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const loginUser = async (e) => {\r\n    e.preventDefault();\r\n    if (handleJoinValidation()) {\r\n      try {\r\n        const { email, password } = user;\r\n        const { data } = await axios.post(\"http://localhost:4000/api/login\", {\r\n          email,\r\n          password,\r\n        });\r\n        if (data.status === false) {\r\n          toast.error(data.msg, toastOptions);\r\n        }\r\n        if (data.status === true) {\r\n          localStorage.setItem(\"accessToken\", data.acessToken);\r\n          setAuthenticated(true);\r\n          navigate(\"/welcome\");\r\n        }\r\n      } catch (error) {\r\n        toast.error(\"Invalid Credentials\", toastOptions);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <LockIcon />\r\n          </Avatar>\r\n        </Grid>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <Box\r\n            sx={{\r\n              marginTop: 10,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n              sx={{\r\n                color: \"#2f2fa2\",\r\n              }}\r\n            >\r\n              Login\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              sx={{\r\n                mt: 3,\r\n              }}\r\n            />\r\n            <form onSubmit={loginUser}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    value={user.email}\r\n                    onChange={(e) =>\r\n                      setUser({ ...user, email: e.target.value })\r\n                    }\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={user.password}\r\n                    onChange={(e) =>\r\n                      setUser({ ...user, password: e.target.value })\r\n                    }\r\n                    autoComplete=\"off\"\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <IconButton onClick={togglePasswordVisibility}>\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 2, mb: 2, backgroundColor: \"#2F2FA2\" }}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <NavLink to=\"/register\" variant=\"body2\">\r\n                  Register Here\r\n                </NavLink>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Container>\r\n      </Paper>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/* eslint-disable no-shadow */\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport { Paper, Avatar } from \"@material-ui/core\";\r\n\r\nfunction Register() {\r\n  const paperStyle = {\r\n    padding: 20,\r\n    height: \"70vh\",\r\n    width: 350,\r\n    margin: \"75px auto\",\r\n  };\r\n\r\n  const avatarStyle = { backgroundColor: \"#2F2FA2\" };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  // Function to toggle password visibility\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  // Function to toggle confirm password visibility\r\n  const toggleConfirmPasswordVisibility = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  };\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  let name;\r\n  let value;\r\n  const handleInputs = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 1000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  const passwordPattern =\r\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n  const handleRegisterValidation = () => {\r\n    const { email, password, confirmPassword } = user;\r\n    if (!email || !password || !confirmPassword) {\r\n      toast.error(\"All the fields are required\", toastOptions);\r\n      return false;\r\n    }\r\n    if (!email.match(emailPattern)) {\r\n      toast.error(\"Invalid email address\", toastOptions);\r\n      return false;\r\n    }\r\n    if (!password.match(passwordPattern)) {\r\n      toast.error(\r\n        \"Password must be 8 characters long and include at least one letter, one number and a special character\",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Password and Confirm Password should be same\", toastOptions);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const registerUser = async (e) => {\r\n    e.preventDefault();\r\n    if (handleRegisterValidation()) {\r\n      const { email, password, confirmPassword } = user;\r\n\r\n      const { data } = await axios.post(\"http://localhost:4000/api/register\", {\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n      });\r\n      if (data.status === false) {\r\n        toast.error(data.msg, toastOptions);\r\n      } else if (data.status === true) {\r\n        toast.success(data.msg, {\r\n          ...toastOptions,\r\n          onClose: () => {\r\n            navigate(\"/\");\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <LockIcon />\r\n          </Avatar>\r\n        </Grid>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <Box\r\n            sx={{\r\n              marginTop: 10,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n              sx={{\r\n                color: \"#2f2fa2\",\r\n              }}\r\n            >\r\n              Register\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              sx={{\r\n                mt: 3,\r\n              }}\r\n            />\r\n            <form onSubmit={registerUser}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    value={user.email}\r\n                    onChange={handleInputs}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={user.password}\r\n                    onChange={handleInputs}\r\n                    autoComplete=\"off\"\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <IconButton onClick={togglePasswordVisibility}>\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={user.confirmPassword}\r\n                    onChange={handleInputs}\r\n                    autoComplete=\"off\"\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <IconButton onClick={toggleConfirmPasswordVisibility}>\r\n                          {showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 2, mb: 2, backgroundColor: \"#2F2FA2\" }}\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <NavLink to=\"/\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </NavLink>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Container>\r\n      </Paper>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Typography, Container, Paper, Button } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst containerStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  minHeight: \"100vh\",\r\n};\r\n\r\nfunction WelcomeMessage() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"accessToken\"); // clear the token from local storage\r\n    navigate(\"/\"); // navigate to the login page\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <Container maxWidth=\"sm\">\r\n        <Paper elevation={3} style={{ padding: \"2rem\", textAlign: \"center\" }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Welcome!\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            Thank you for logging in to our platform. We're excited to have you\r\n            here.\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleLogout}\r\n            style={{ marginTop: \"1rem\" }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessage;\r\n","import React from \"react\";\r\n\r\nimport { Typography, Container, Paper } from \"@mui/material\";\r\n\r\nconst containerStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  minHeight: \"100vh\",\r\n};\r\n\r\nfunction NotAuthenticated() {\r\n  return (\r\n    <div style={containerStyle}>\r\n      <Container maxWidth=\"sm\">\r\n        <Paper elevation={3} style={{ padding: \"2rem\", textAlign: \"center\" }}>\r\n          <Typography variant=\"body1\">\r\n            Please Log In to access this page.\r\n          </Typography>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotAuthenticated;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Welcome from \"./pages/Welcome\";\r\nimport NotAuthenticated from \"./pages/NotAuthenticated\";\r\n\r\nfunction App() {\r\n  const [authenticated, setAuthenticated] = useState(\r\n    localStorage.getItem(\"accessToken\") ? true : false\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={<Login setAuthenticated={setAuthenticated} />}\r\n          />\r\n          <Route\r\n            path=\"/welcome\"\r\n            element={authenticated ? <Welcome /> : <NotAuthenticated />}\r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}